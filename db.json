{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/hexo-theme-snippet/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/assets/highlight.pack.js","path":"assets/highlight.pack.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/assets/tagcanvas.min.js","path":"assets/tagcanvas.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/img/branding.png","path":"img/branding.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/img/head-img2.jpg","path":"img/head-img2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/img/reward-wepay.jpg","path":"img/reward-wepay.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/img/timeline-clock.gif","path":"img/timeline-clock.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/img/timeline-dot.gif","path":"img/timeline-dot.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/img/timeline.gif","path":"img/timeline.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/js/app.js","path":"js/app.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/assets/valine.min.js","path":"assets/valine.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/fonts/fontawesome-webfont.woff2","path":"fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/fonts/FontAwesome.otf","path":"fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-snippet/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"b233ab8747e3f272b4440fa97136ed493127d87e","modified":1556090123755},{"_id":"source/README.md","hash":"49d5f311c4a026775068d7ceb185c3493e2431fd","modified":1556103277428},{"_id":"themes/hexo-theme-snippet/LICENSE","hash":"c720db99e36a717d9808bf97b736612462e883dd","modified":1555986103955},{"_id":"themes/hexo-theme-snippet/README.md","hash":"8b43257839272aeac1ddfeb11e75759f92202a41","modified":1555986103955},{"_id":"themes/hexo-theme-snippet/_config.yml","hash":"bbc97d7e251fa07a21b757e567abc37d1fa03632","modified":1556075993849},{"_id":"themes/hexo-theme-snippet/package.json","hash":"fc7ed09c52ba1a2ebbfefa085e3a65b5af43dfb7","modified":1555986103960},{"_id":"source/_posts/Java调用R（一）_编写程序.md","hash":"4a858845b22c7678301a20c71e33719350dc7cdc","modified":1556162929075},{"_id":"source/_posts/Java调用R（二）_环境搭建.md","hash":"c5734f0ee5910b493908d2bd2fdcc96ea8be199e","modified":1556162929075},{"_id":"themes/hexo-theme-snippet/languages/default.yml","hash":"358313b8a4a48bd32c7d58fc9ef3a4ebe395bf8d","modified":1555986103955},{"_id":"themes/hexo-theme-snippet/languages/ja.yml","hash":"fcafdb03d5e000c225a664d65f38a75c7efdef03","modified":1555986103956},{"_id":"themes/hexo-theme-snippet/languages/zh-CN.yml","hash":"4ebacd2028454a5b9642a22c19d3e8c3078b3a0a","modified":1555986103956},{"_id":"themes/hexo-theme-snippet/languages/zh-TW.yml","hash":"a0bd8ba3e9ad19116e072983cfefd1aabe39d2cd","modified":1555986103956},{"_id":"themes/hexo-theme-snippet/layout/archive.ejs","hash":"bbd99d08132f9ca87e5b17cf642384dc1673f579","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/category.ejs","hash":"ebd05ceb75be73e84ddf085ccfdb24c07162d0fa","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/index.ejs","hash":"4b17eb2082d177b0cb85f04afadcc604f4073d30","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/layout.ejs","hash":"c986efe07c070e0870b89181cc47010b118e2d04","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/post.ejs","hash":"d0aa6f0fda520815307d2adc2aacaf5314919d8f","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/tag.ejs","hash":"9b42656e75c58e7145e52408b51f017f6b6d9464","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/scripts/helper.js","hash":"836d369cf95ac51de957e09d396e6a8be1e84cf6","modified":1555986103961},{"_id":"themes/hexo-theme-snippet/scripts/process.js","hash":"c2f0571899a6dd38bd944aaf47e21fc650f7d52e","modified":1555986103961},{"_id":"themes/hexo-theme-snippet/source/favicon.ico","hash":"65f26147ea3433ffd64d3f18bf281af48dc5d06e","modified":1555986103968},{"_id":"themes/hexo-theme-snippet/layout/_partial/archive.ejs","hash":"cc21d71c87829f90686a3f6e5ac4d8665c871c25","modified":1555986103956},{"_id":"themes/hexo-theme-snippet/layout/_partial/article-meta.ejs","hash":"40f3cc7d88f72f58d320457a0e939e00605fcb1d","modified":1555986103956},{"_id":"themes/hexo-theme-snippet/layout/_partial/article.ejs","hash":"ecc6775b64c4b87a62fae4f8a2545105e40e7dfe","modified":1555986103956},{"_id":"themes/hexo-theme-snippet/layout/_partial/busuanzi.ejs","hash":"2c26222dc1c8da66135241fdc84d16ba66ae285c","modified":1555986103956},{"_id":"themes/hexo-theme-snippet/layout/_partial/copyright.ejs","hash":"4c8903c3554aa50259a7581f1a9b7ffca9b91a97","modified":1555986103957},{"_id":"themes/hexo-theme-snippet/layout/_partial/footer.ejs","hash":"4a5b6fa1520442ac4edc2ec3d575a676b6717854","modified":1555986103957},{"_id":"themes/hexo-theme-snippet/layout/_partial/gallery.ejs","hash":"1b6b7859f395e10a3ecaa900de2d1312dc140def","modified":1555986103957},{"_id":"themes/hexo-theme-snippet/layout/_partial/head.ejs","hash":"1aea0e44f11d9f6f3e78f0da7dba0f35b910e6c3","modified":1555986103957},{"_id":"themes/hexo-theme-snippet/layout/_partial/header.ejs","hash":"b08447c9201c196d132691f1a16c152e82cdcef4","modified":1555986103957},{"_id":"themes/hexo-theme-snippet/layout/_partial/nav.ejs","hash":"7fa65a2162a748f049fb910b5b0e46a5bcf57b3b","modified":1555986103957},{"_id":"themes/hexo-theme-snippet/layout/_partial/pagination.ejs","hash":"2ec88a22fd29e7cc97ca2a508eee7d168e338969","modified":1555986103957},{"_id":"themes/hexo-theme-snippet/layout/_partial/reward.ejs","hash":"8ea91bdf01c946c76f4bd671768c8b930c7de446","modified":1555986103957},{"_id":"themes/hexo-theme-snippet/layout/_partial/script.ejs","hash":"0ecdc42c6c1c2474d9e306de39323f089dddf7af","modified":1555986103957},{"_id":"themes/hexo-theme-snippet/layout/_partial/sidebar.ejs","hash":"381b7af719c1ab3a94280309926c1205ce7b93a5","modified":1555986103957},{"_id":"themes/hexo-theme-snippet/layout/_partial/toc.ejs","hash":"7d86def87d0e7b7ab15400a23b0796f0da430e60","modified":1555986103957},{"_id":"themes/hexo-theme-snippet/layout/_vendor/baidu_sitemap.ejs","hash":"dabeccfd4860dac2f6b883616f616c4c55fb22ba","modified":1555986103959},{"_id":"themes/hexo-theme-snippet/layout/_widget/archive.ejs","hash":"ea6596d993ed1b74bd03eee06ab480931b8c2d9e","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/_widget/category.ejs","hash":"1c6881cd5b6b034ddecda6c85a3337d17a03e9ff","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/_widget/friends.ejs","hash":"43b0404d608db1a237b3cf17ec8df7b2d24f9533","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/_widget/notification.ejs","hash":"78eca9de4eec7c638c7b16863fb90e7182f7d80b","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/_widget/search.ejs","hash":"dfbf723051f71099502c58a237bc484cebd5157d","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/_widget/social.ejs","hash":"f97313cdc1b495f7602e023b2ade5630acc4b667","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/_widget/tagcloud.ejs","hash":"21746717296515c5b45a8fd5ef302ef8a9470bb2","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/source/assets/highlight.pack.js","hash":"f39840759ec9afe56ec1ca30579d1f1c9d1f6026","modified":1555986103963},{"_id":"themes/hexo-theme-snippet/source/assets/tagcanvas.min.js","hash":"a14280f4e924428ac0cdbac7635a7279cab1b6bf","modified":1555986103963},{"_id":"themes/hexo-theme-snippet/source/css/font-awesome.min.css","hash":"12d6861075de8e293265ff6ff03b1f3adcb44c76","modified":1555986103967},{"_id":"themes/hexo-theme-snippet/source/css/style.css","hash":"e763ff728431468d65920c004acbe637847b221c","modified":1555986103968},{"_id":"themes/hexo-theme-snippet/source/img/avatar.jpg","hash":"da98a1529773b806ec3610cbb4c0511b6940ad6c","modified":1553168558000},{"_id":"themes/hexo-theme-snippet/source/img/branding.png","hash":"18bee49d6a4c521ad230047c0b416245e009c2c9","modified":1555986103980},{"_id":"themes/hexo-theme-snippet/source/img/head-img2.jpg","hash":"a318d304665c2f410f79e6d2eb1b98119f675b4b","modified":1555989116000},{"_id":"themes/hexo-theme-snippet/source/img/reward-wepay.jpg","hash":"2a56391f2b6282b49e724b72bf610b0dabf53742","modified":1555986103980},{"_id":"themes/hexo-theme-snippet/source/img/timeline-clock.gif","hash":"2bec1bf5efd948ab2e5942b6da8164faa41b62b2","modified":1555986103981},{"_id":"themes/hexo-theme-snippet/source/img/timeline-dot.gif","hash":"c85ef87be5b631c009e7c5737d33b61dfe580a4d","modified":1555986103981},{"_id":"themes/hexo-theme-snippet/source/img/timeline.gif","hash":"b7c7aac44e618df19626d882dc46db48a4aa3673","modified":1555986103981},{"_id":"themes/hexo-theme-snippet/source/js/app.js","hash":"eca509fc5b45dcd1a0007c62f740529ca31a122f","modified":1555986103981},{"_id":"themes/hexo-theme-snippet/source/js/search.js","hash":"7615b89a6604317860396569f0028b8ab9aaf95a","modified":1555986103981},{"_id":"themes/hexo-theme-snippet/source/assets/valine.min.js","hash":"d9d4a8f81f288b77b3d0a3866d004e2b5eb30038","modified":1555986103965},{"_id":"themes/hexo-theme-snippet/source/css/bootstrap.min.css","hash":"6527d8bf3e1e9368bab8c7b60f56bc01fa3afd68","modified":1555986103967},{"_id":"themes/hexo-theme-snippet/source/img/loading.gif","hash":"6cea4dc953ac09fb744c7fedc12a1f4736faf8ec","modified":1555986103980},{"_id":"themes/hexo-theme-snippet/source/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1555986103979},{"_id":"themes/hexo-theme-snippet/layout/_partial/_head-sections/IE.ejs","hash":"567494a97ba2db7bb452294a9980b4d63b399ef0","modified":1555986103956},{"_id":"themes/hexo-theme-snippet/layout/_partial/_head-sections/seo.ejs","hash":"8cf5d4347c69c0999d756e06374039572c9ed975","modified":1555986103956},{"_id":"themes/hexo-theme-snippet/layout/_partial/_head-sections/style.ejs","hash":"ece8b1bb0f550ddb0e7ac179de54a8e5f06f49aa","modified":1555986103956},{"_id":"themes/hexo-theme-snippet/layout/_partial/_head-sections/title.ejs","hash":"1482f56c44221cbc0d28ba06e377f4b55cdaacc2","modified":1555986103956},{"_id":"themes/hexo-theme-snippet/layout/_vendor/analytics/baidu.ejs","hash":"eb4a75fb5ba9237d93430e727165d98ccda75a02","modified":1555986103958},{"_id":"themes/hexo-theme-snippet/layout/_vendor/analytics/cnzz.ejs","hash":"8bfc514b178fafd81cc8181880afc5c9cbee02dc","modified":1555986103959},{"_id":"themes/hexo-theme-snippet/layout/_vendor/analytics/google.ejs","hash":"91844d4521f97517ea9f169ee85b18c9d0d8cf17","modified":1555986103959},{"_id":"themes/hexo-theme-snippet/layout/_vendor/analytics/index.ejs","hash":"6315abe9c31f4c4de719fa3cbfa2b1c6f294b0de","modified":1555986103959},{"_id":"themes/hexo-theme-snippet/layout/_vendor/analytics/tencent.ejs","hash":"10b91084cda9067d037a5f31e48d4edcbaa0c751","modified":1555986103959},{"_id":"themes/hexo-theme-snippet/layout/_vendor/comments/changyan.ejs","hash":"202c94162ac2eeb0c93c8d2667c82b8705de6390","modified":1555986103959},{"_id":"themes/hexo-theme-snippet/layout/_vendor/comments/disqus.ejs","hash":"7b5e05154be0408be110893439bfa33e262245de","modified":1555986103959},{"_id":"themes/hexo-theme-snippet/layout/_vendor/comments/gitalk.ejs","hash":"c556003dde298f4e8d3a75974996207876e83fa9","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/_vendor/comments/gitment.ejs","hash":"be5c261ae8a769747704a228aa35758120b814e1","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/_vendor/comments/index.ejs","hash":"99dc8370fabb5302cc9810041e453302ecd98e82","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/_vendor/comments/livere.ejs","hash":"6333308ba24ae6f2a3e73f4cdc1b42e024d19910","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/_vendor/comments/uyan.ejs","hash":"2c2abe17f4f5c5ba1a9aaa948ef0a88d99f653f8","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/layout/_vendor/comments/valine.ejs","hash":"d339116cf24e76e7bc9f28e8a0a7c844ede2e506","modified":1555986103960},{"_id":"themes/hexo-theme-snippet/source/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1555986103979},{"_id":"themes/hexo-theme-snippet/source/css/less/_highlight.less","hash":"c799cfa32c323c33a09569d326786874026fd1ef","modified":1555986103967},{"_id":"themes/hexo-theme-snippet/source/css/less/_mixins.less","hash":"e89dc55772b5ae6bfd4cac3b5c32bf9ce73ac805","modified":1555986103967},{"_id":"themes/hexo-theme-snippet/source/css/less/_reward.less","hash":"100caed190893351a1ca7ed8e72bad57695d5f19","modified":1555986103967},{"_id":"themes/hexo-theme-snippet/source/css/less/_scrollbar.less","hash":"596ee6ada077f94a05d7c0168dddb20be16b85da","modified":1555986103967},{"_id":"themes/hexo-theme-snippet/source/css/less/_style.less","hash":"b64793abd9ee0f0670c3eafd15ab8ad633ebf1d2","modified":1555986103967},{"_id":"themes/hexo-theme-snippet/source/css/less/_timeline.less","hash":"0bb3cef8b58621455d023c30d81fae204200d3bb","modified":1555986103967},{"_id":"themes/hexo-theme-snippet/source/css/less/_variable.less","hash":"1d81728d61de486a7a746beb19275b2b4b65e304","modified":1555986103967},{"_id":"themes/hexo-theme-snippet/source/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1555986103970},{"_id":"themes/hexo-theme-snippet/source/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1555986103973},{"_id":"themes/hexo-theme-snippet/source/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1555986103978},{"_id":"themes/hexo-theme-snippet/source/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1555986103978},{"_id":"public/atom.xml","hash":"008181a9faa1d7ff4f6f6e49e20cc040fcbdc4ae","modified":1556170715880},{"_id":"public/content.json","hash":"5cc621baed301445001262b2e7c6e0f61d2029e4","modified":1556170715881},{"_id":"public/sitemap.xml","hash":"999db6d4e80eaccec3aa13027010a86a73316d4a","modified":1556170716046},{"_id":"public/README.html","hash":"5b079da59d92dfab1328d8aea14723da97d6e3a4","modified":1556170716053},{"_id":"public/archives/index.html","hash":"20dc20a60c2acd96716a3cb66f0d9dff7ef5430e","modified":1556170716053},{"_id":"public/archives/2017/index.html","hash":"3dbe869ac31bf9ebd9e24b1c8375e386378f1681","modified":1556170716053},{"_id":"public/archives/2017/06/index.html","hash":"7695a227a503b65f4c8e119ec5e40e014eee1a90","modified":1556170716053},{"_id":"public/categories/R/index.html","hash":"69d2bb67fde0c46bf3a9da6dda0989ced81a78c6","modified":1556170716053},{"_id":"public/index.html","hash":"6808ba45359c8087331e15ea7acf13ea70477a04","modified":1556170716053},{"_id":"public/tags/Java调用R/index.html","hash":"8119bd8967dde20eede0f4ea228cb0e69d29d02d","modified":1556170716053},{"_id":"public/2017/06/17/Java调用R（二）_环境搭建/index.html","hash":"6d4f7a27f4575615ebd2d5150910ee907b44174d","modified":1556170716053},{"_id":"public/2017/06/16/Java调用R（一）_编写程序/index.html","hash":"15561cfbb9faa359e11858086138ccf2a9ebde09","modified":1556170716053},{"_id":"public/CNAME","hash":"b233ab8747e3f272b4440fa97136ed493127d87e","modified":1556170716054},{"_id":"public/favicon.ico","hash":"65f26147ea3433ffd64d3f18bf281af48dc5d06e","modified":1556170716054},{"_id":"public/img/branding.png","hash":"18bee49d6a4c521ad230047c0b416245e009c2c9","modified":1556170716057},{"_id":"public/img/head-img2.jpg","hash":"a318d304665c2f410f79e6d2eb1b98119f675b4b","modified":1556170716057},{"_id":"public/img/reward-wepay.jpg","hash":"2a56391f2b6282b49e724b72bf610b0dabf53742","modified":1556170716057},{"_id":"public/img/timeline-clock.gif","hash":"2bec1bf5efd948ab2e5942b6da8164faa41b62b2","modified":1556170716057},{"_id":"public/img/timeline-dot.gif","hash":"c85ef87be5b631c009e7c5737d33b61dfe580a4d","modified":1556170716057},{"_id":"public/img/timeline.gif","hash":"b7c7aac44e618df19626d882dc46db48a4aa3673","modified":1556170716057},{"_id":"public/img/avatar.jpg","hash":"da98a1529773b806ec3610cbb4c0511b6940ad6c","modified":1556170716060},{"_id":"public/img/loading.gif","hash":"6cea4dc953ac09fb744c7fedc12a1f4736faf8ec","modified":1556170716060},{"_id":"public/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1556170716060},{"_id":"public/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1556170716060},{"_id":"public/js/app.js","hash":"eca509fc5b45dcd1a0007c62f740529ca31a122f","modified":1556170716063},{"_id":"public/js/search.js","hash":"7615b89a6604317860396569f0028b8ab9aaf95a","modified":1556170716063},{"_id":"public/assets/highlight.pack.js","hash":"f39840759ec9afe56ec1ca30579d1f1c9d1f6026","modified":1556170716064},{"_id":"public/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1556170716069},{"_id":"public/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1556170716069},{"_id":"public/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1556170716069},{"_id":"public/css/font-awesome.min.css","hash":"12d6861075de8e293265ff6ff03b1f3adcb44c76","modified":1556170716076},{"_id":"public/css/style.css","hash":"e763ff728431468d65920c004acbe637847b221c","modified":1556170716076},{"_id":"public/assets/tagcanvas.min.js","hash":"a14280f4e924428ac0cdbac7635a7279cab1b6bf","modified":1556170716080},{"_id":"public/assets/valine.min.js","hash":"d9d4a8f81f288b77b3d0a3866d004e2b5eb30038","modified":1556170716100},{"_id":"public/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1556170716103},{"_id":"public/css/bootstrap.min.css","hash":"6527d8bf3e1e9368bab8c7b60f56bc01fa3afd68","modified":1556170716107}],"Category":[{"name":"R","_id":"cjuw7v4yo0003ynja9zqdwoxv"}],"Data":[],"Page":[],"Post":[{"title":"Java调用R（一） 编写程序","date":"2017-06-16T11:20:23.000Z","updated":"2019-04-24T10:40:28.000Z","comments":1,"abbrlink":46404,"_content":"\n> 摘要：实现Java调用R语言的两种方式，以及在调用过程中应该注意的和优化的事项。\n\n## 1.引用Maven包\n### `maven`如下\n```\n<dependency>\n  <groupId>org.rosuda.REngine</groupId>\n  <artifactId>Rserve</artifactId>\n  <version>1.8.1</version>\n</dependency>\n<dependency>\n  <groupId>org.rosuda.REngine</groupId>\n  <artifactId>REngine</artifactId>\n  <version>2.1.0</version>\n</dependency>\n```\n## 2.调用方式\n### 1) R源码如下\n```\nsourceTest <- function(doubleA,doubleB){\n  return (2*doubleA+doubleB)\n}\n```\n### 2) Java调用方式一\n\n通过装载源码的方式，对于函数比较大，有很多子函数时不太方便\n```\npublic static void sourceTest2(double a, double b) {\n        RConnection c = null;\n        try {\n            //获得 R链接\n            c = new RConnection( \"127.0.0.1\");\n            //加载 源代码\n            c.voidEval(\"sourceTest <- function(doubleA,doubleB){return (2*doubleA+doubleB)}\");\n            //加载 参数\n            c.assign(\"para\", new double[]{a, b});\n            //执行函数\n            REXP data = c.eval(\"sourceTest(para[1],para[2])\");\n            //打印结果\n            System.out.println( data.asDouble());\n        } catch (REXPMismatchException | REngineException ignored) {\n            // 做处理...\n        } finally {\n            if (c != null) {\n                c.close();\n            }\n        }\n    }\n```\n有子函数时,就应该先加载子函数再加载主函数：\n```\n//加载子函数 A\nc.voidEval(\"sourceTestA <- function(doubleA,doubleB){return (doubleA+doubleB)}\");\n//加载子函数 B\nc.voidEval(\"sourceTestB <- function(doubleA,doubleB){return (doubleA*doubleB)}\");\n//加载主函数，因为主函数中会用到子函数A和B\nc.voidEval(\"sourceTest <- function(doubleA,doubleB){return (sourceTestA(doubleA,doubleB)+sourceTestB(doubleA,doubleB)}\");\n```\n这种方式对子函数比较多，就很麻烦\n### 3) Java调用方式二\n\n通过`source`的方式，对于子函数很多也很方便\n```\npublic static void sourceTest3(double a, double b) {\n        RConnection c = null;\n        try {\n            c = new RConnection( \"127.0.0.1\");\n            c.assign(\"para\", new double[]{a, b});\n            c.eval(\"source(\\\"E:/Data/bigdata-r/out/sourceTest.R\\\")\");\n            REXP data = c.eval(\"sourceTest(para[1],para[2])\");\n            System.out.println( data.asDouble());\n        } catch (REXPMismatchException | REngineException ignored) {\n            // 做处理...\n        } finally {\n            if (c != null) {\n                c.close();\n            }\n        }\n    }\n```\n### 4) 简单测试\n```\npublic static void main(String[] args) {\n    sourceTest2(2, 3);\n    sourceTest3(2, 3);\n}\n```\n结果：\n```\nE:\\Soft\\Java\\jdk1.8.0_101\\bin\\java....\n7.0\n7.0\nProcess finished with exit code 0\n```\n## 3.优化\n上面已经步骤完成了对`Java`对`R`的调用，但有时我们并不满足与此\n\n捕获异常\n```\nREXP data = c.parseAndEval(\"data<-try( sourceTest(a[1],a[2]))\");\nif (data.inherits(\"try-error\")) {\n System.out.println(\"Error: \" + data.asString());\n}\n```\n通过`parseAndEval`和`try()`定义：程序可能会有异常产生；将通过`data.inherits(\"try-error\")`这种方式捕获异常，当然这种方式肯定对性能有所影响\n\n## 4.注意\n### 1) 加载boolean型参数\n```\nif( config.isUseNA()){\n  c.voidEval(\"useNA <- T\");\n} else {\n  c.voidEval(\"useNA <- F\");\n}\n```\n只能以这种方式加载，其中`useNA`为参数名，`T`和`F`分别表示`true`、`false`\n\n### 2) 获取返回的数据\n\n需要与编写R的同事沟通好返回什么类型，一般来说，有如下获取格式(可以相互独立)，`REXP data = c.parseAndEval(\"....\");`：\n```\ndata.asList();\nRList result = ((REXP) data).asList();\n((REXP) result.get(\"AAA\")).asIntegers();\n((REXP) result.get(\"BBB\")).asDoubles();\n((REXP) result.get(\"CCC\")).asStrings()));\n```\n>谢谢","source":"_posts/Java调用R（一）_编写程序.md","raw":"---\ntitle: Java调用R（一） 编写程序\ndate: '2017/6/16 19:20:23'\nupdated: '2019/4/24 18:40:28'\ncomments: true\ntags:\n  - Java调用R\ncategories:\n  - R\nabbrlink: 46404\n---\n\n> 摘要：实现Java调用R语言的两种方式，以及在调用过程中应该注意的和优化的事项。\n\n## 1.引用Maven包\n### `maven`如下\n```\n<dependency>\n  <groupId>org.rosuda.REngine</groupId>\n  <artifactId>Rserve</artifactId>\n  <version>1.8.1</version>\n</dependency>\n<dependency>\n  <groupId>org.rosuda.REngine</groupId>\n  <artifactId>REngine</artifactId>\n  <version>2.1.0</version>\n</dependency>\n```\n## 2.调用方式\n### 1) R源码如下\n```\nsourceTest <- function(doubleA,doubleB){\n  return (2*doubleA+doubleB)\n}\n```\n### 2) Java调用方式一\n\n通过装载源码的方式，对于函数比较大，有很多子函数时不太方便\n```\npublic static void sourceTest2(double a, double b) {\n        RConnection c = null;\n        try {\n            //获得 R链接\n            c = new RConnection( \"127.0.0.1\");\n            //加载 源代码\n            c.voidEval(\"sourceTest <- function(doubleA,doubleB){return (2*doubleA+doubleB)}\");\n            //加载 参数\n            c.assign(\"para\", new double[]{a, b});\n            //执行函数\n            REXP data = c.eval(\"sourceTest(para[1],para[2])\");\n            //打印结果\n            System.out.println( data.asDouble());\n        } catch (REXPMismatchException | REngineException ignored) {\n            // 做处理...\n        } finally {\n            if (c != null) {\n                c.close();\n            }\n        }\n    }\n```\n有子函数时,就应该先加载子函数再加载主函数：\n```\n//加载子函数 A\nc.voidEval(\"sourceTestA <- function(doubleA,doubleB){return (doubleA+doubleB)}\");\n//加载子函数 B\nc.voidEval(\"sourceTestB <- function(doubleA,doubleB){return (doubleA*doubleB)}\");\n//加载主函数，因为主函数中会用到子函数A和B\nc.voidEval(\"sourceTest <- function(doubleA,doubleB){return (sourceTestA(doubleA,doubleB)+sourceTestB(doubleA,doubleB)}\");\n```\n这种方式对子函数比较多，就很麻烦\n### 3) Java调用方式二\n\n通过`source`的方式，对于子函数很多也很方便\n```\npublic static void sourceTest3(double a, double b) {\n        RConnection c = null;\n        try {\n            c = new RConnection( \"127.0.0.1\");\n            c.assign(\"para\", new double[]{a, b});\n            c.eval(\"source(\\\"E:/Data/bigdata-r/out/sourceTest.R\\\")\");\n            REXP data = c.eval(\"sourceTest(para[1],para[2])\");\n            System.out.println( data.asDouble());\n        } catch (REXPMismatchException | REngineException ignored) {\n            // 做处理...\n        } finally {\n            if (c != null) {\n                c.close();\n            }\n        }\n    }\n```\n### 4) 简单测试\n```\npublic static void main(String[] args) {\n    sourceTest2(2, 3);\n    sourceTest3(2, 3);\n}\n```\n结果：\n```\nE:\\Soft\\Java\\jdk1.8.0_101\\bin\\java....\n7.0\n7.0\nProcess finished with exit code 0\n```\n## 3.优化\n上面已经步骤完成了对`Java`对`R`的调用，但有时我们并不满足与此\n\n捕获异常\n```\nREXP data = c.parseAndEval(\"data<-try( sourceTest(a[1],a[2]))\");\nif (data.inherits(\"try-error\")) {\n System.out.println(\"Error: \" + data.asString());\n}\n```\n通过`parseAndEval`和`try()`定义：程序可能会有异常产生；将通过`data.inherits(\"try-error\")`这种方式捕获异常，当然这种方式肯定对性能有所影响\n\n## 4.注意\n### 1) 加载boolean型参数\n```\nif( config.isUseNA()){\n  c.voidEval(\"useNA <- T\");\n} else {\n  c.voidEval(\"useNA <- F\");\n}\n```\n只能以这种方式加载，其中`useNA`为参数名，`T`和`F`分别表示`true`、`false`\n\n### 2) 获取返回的数据\n\n需要与编写R的同事沟通好返回什么类型，一般来说，有如下获取格式(可以相互独立)，`REXP data = c.parseAndEval(\"....\");`：\n```\ndata.asList();\nRList result = ((REXP) data).asList();\n((REXP) result.get(\"AAA\")).asIntegers();\n((REXP) result.get(\"BBB\")).asDoubles();\n((REXP) result.get(\"CCC\")).asStrings()));\n```\n>谢谢","slug":"Java调用R（一）_编写程序","published":1,"layout":"post","photos":[],"link":"","_id":"cjuw7v4yh0001ynjay3bt26zp","content":"<blockquote>\n<p>摘要：实现Java调用R语言的两种方式，以及在调用过程中应该注意的和优化的事项。</p>\n</blockquote>\n<h2 id=\"1-引用Maven包\"><a href=\"#1-引用Maven包\" class=\"headerlink\" title=\"1.引用Maven包\"></a>1.引用Maven包</h2><h3 id=\"maven如下\"><a href=\"#maven如下\" class=\"headerlink\" title=\"maven如下\"></a><code>maven</code>如下</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">  &lt;groupId&gt;org.rosuda.REngine&lt;/groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;Rserve&lt;/artifactId&gt;</span><br><span class=\"line\">  &lt;version&gt;1.8.1&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">  &lt;groupId&gt;org.rosuda.REngine&lt;/groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;REngine&lt;/artifactId&gt;</span><br><span class=\"line\">  &lt;version&gt;2.1.0&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-调用方式\"><a href=\"#2-调用方式\" class=\"headerlink\" title=\"2.调用方式\"></a>2.调用方式</h2><h3 id=\"1-R源码如下\"><a href=\"#1-R源码如下\" class=\"headerlink\" title=\"1) R源码如下\"></a>1) R源码如下</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sourceTest &lt;- function(doubleA,doubleB)&#123;</span><br><span class=\"line\">  return (2*doubleA+doubleB)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-Java调用方式一\"><a href=\"#2-Java调用方式一\" class=\"headerlink\" title=\"2) Java调用方式一\"></a>2) Java调用方式一</h3><p>通过装载源码的方式，对于函数比较大，有很多子函数时不太方便<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static void sourceTest2(double a, double b) &#123;</span><br><span class=\"line\">        RConnection c = null;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            //获得 R链接</span><br><span class=\"line\">            c = new RConnection( &quot;127.0.0.1&quot;);</span><br><span class=\"line\">            //加载 源代码</span><br><span class=\"line\">            c.voidEval(&quot;sourceTest &lt;- function(doubleA,doubleB)&#123;return (2*doubleA+doubleB)&#125;&quot;);</span><br><span class=\"line\">            //加载 参数</span><br><span class=\"line\">            c.assign(&quot;para&quot;, new double[]&#123;a, b&#125;);</span><br><span class=\"line\">            //执行函数</span><br><span class=\"line\">            REXP data = c.eval(&quot;sourceTest(para[1],para[2])&quot;);</span><br><span class=\"line\">            //打印结果</span><br><span class=\"line\">            System.out.println( data.asDouble());</span><br><span class=\"line\">        &#125; catch (REXPMismatchException | REngineException ignored) &#123;</span><br><span class=\"line\">            // 做处理...</span><br><span class=\"line\">        &#125; finally &#123;</span><br><span class=\"line\">            if (c != null) &#123;</span><br><span class=\"line\">                c.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p>有子函数时,就应该先加载子函数再加载主函数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//加载子函数 A</span><br><span class=\"line\">c.voidEval(&quot;sourceTestA &lt;- function(doubleA,doubleB)&#123;return (doubleA+doubleB)&#125;&quot;);</span><br><span class=\"line\">//加载子函数 B</span><br><span class=\"line\">c.voidEval(&quot;sourceTestB &lt;- function(doubleA,doubleB)&#123;return (doubleA*doubleB)&#125;&quot;);</span><br><span class=\"line\">//加载主函数，因为主函数中会用到子函数A和B</span><br><span class=\"line\">c.voidEval(&quot;sourceTest &lt;- function(doubleA,doubleB)&#123;return (sourceTestA(doubleA,doubleB)+sourceTestB(doubleA,doubleB)&#125;&quot;);</span><br></pre></td></tr></table></figure></p>\n<p>这种方式对子函数比较多，就很麻烦</p>\n<h3 id=\"3-Java调用方式二\"><a href=\"#3-Java调用方式二\" class=\"headerlink\" title=\"3) Java调用方式二\"></a>3) Java调用方式二</h3><p>通过<code>source</code>的方式，对于子函数很多也很方便<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static void sourceTest3(double a, double b) &#123;</span><br><span class=\"line\">        RConnection c = null;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            c = new RConnection( &quot;127.0.0.1&quot;);</span><br><span class=\"line\">            c.assign(&quot;para&quot;, new double[]&#123;a, b&#125;);</span><br><span class=\"line\">            c.eval(&quot;source(\\&quot;E:/Data/bigdata-r/out/sourceTest.R\\&quot;)&quot;);</span><br><span class=\"line\">            REXP data = c.eval(&quot;sourceTest(para[1],para[2])&quot;);</span><br><span class=\"line\">            System.out.println( data.asDouble());</span><br><span class=\"line\">        &#125; catch (REXPMismatchException | REngineException ignored) &#123;</span><br><span class=\"line\">            // 做处理...</span><br><span class=\"line\">        &#125; finally &#123;</span><br><span class=\"line\">            if (c != null) &#123;</span><br><span class=\"line\">                c.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-简单测试\"><a href=\"#4-简单测试\" class=\"headerlink\" title=\"4) 简单测试\"></a>4) 简单测试</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static void main(String[] args) &#123;</span><br><span class=\"line\">    sourceTest2(2, 3);</span><br><span class=\"line\">    sourceTest3(2, 3);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">E:\\Soft\\Java\\jdk1.8.0_101\\bin\\java....</span><br><span class=\"line\">7.0</span><br><span class=\"line\">7.0</span><br><span class=\"line\">Process finished with exit code 0</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"3-优化\"><a href=\"#3-优化\" class=\"headerlink\" title=\"3.优化\"></a>3.优化</h2><p>上面已经步骤完成了对<code>Java</code>对<code>R</code>的调用，但有时我们并不满足与此</p>\n<p>捕获异常<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">REXP data = c.parseAndEval(&quot;data&lt;-try( sourceTest(a[1],a[2]))&quot;);</span><br><span class=\"line\">if (data.inherits(&quot;try-error&quot;)) &#123;</span><br><span class=\"line\"> System.out.println(&quot;Error: &quot; + data.asString());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>通过<code>parseAndEval</code>和<code>try()</code>定义：程序可能会有异常产生；将通过<code>data.inherits(&quot;try-error&quot;)</code>这种方式捕获异常，当然这种方式肯定对性能有所影响</p>\n<h2 id=\"4-注意\"><a href=\"#4-注意\" class=\"headerlink\" title=\"4.注意\"></a>4.注意</h2><h3 id=\"1-加载boolean型参数\"><a href=\"#1-加载boolean型参数\" class=\"headerlink\" title=\"1) 加载boolean型参数\"></a>1) 加载boolean型参数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if( config.isUseNA())&#123;</span><br><span class=\"line\">  c.voidEval(&quot;useNA &lt;- T&quot;);</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">  c.voidEval(&quot;useNA &lt;- F&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>只能以这种方式加载，其中<code>useNA</code>为参数名，<code>T</code>和<code>F</code>分别表示<code>true</code>、<code>false</code></p>\n<h3 id=\"2-获取返回的数据\"><a href=\"#2-获取返回的数据\" class=\"headerlink\" title=\"2) 获取返回的数据\"></a>2) 获取返回的数据</h3><p>需要与编写R的同事沟通好返回什么类型，一般来说，有如下获取格式(可以相互独立)，<code>REXP data = c.parseAndEval(&quot;....&quot;);</code>：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data.asList();</span><br><span class=\"line\">RList result = ((REXP) data).asList();</span><br><span class=\"line\">((REXP) result.get(&quot;AAA&quot;)).asIntegers();</span><br><span class=\"line\">((REXP) result.get(&quot;BBB&quot;)).asDoubles();</span><br><span class=\"line\">((REXP) result.get(&quot;CCC&quot;)).asStrings()));</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>谢谢</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>摘要：实现Java调用R语言的两种方式，以及在调用过程中应该注意的和优化的事项。</p>\n</blockquote>\n<h2 id=\"1-引用Maven包\"><a href=\"#1-引用Maven包\" class=\"headerlink\" title=\"1.引用Maven包\"></a>1.引用Maven包</h2><h3 id=\"maven如下\"><a href=\"#maven如下\" class=\"headerlink\" title=\"maven如下\"></a><code>maven</code>如下</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">  &lt;groupId&gt;org.rosuda.REngine&lt;/groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;Rserve&lt;/artifactId&gt;</span><br><span class=\"line\">  &lt;version&gt;1.8.1&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">  &lt;groupId&gt;org.rosuda.REngine&lt;/groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;REngine&lt;/artifactId&gt;</span><br><span class=\"line\">  &lt;version&gt;2.1.0&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-调用方式\"><a href=\"#2-调用方式\" class=\"headerlink\" title=\"2.调用方式\"></a>2.调用方式</h2><h3 id=\"1-R源码如下\"><a href=\"#1-R源码如下\" class=\"headerlink\" title=\"1) R源码如下\"></a>1) R源码如下</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sourceTest &lt;- function(doubleA,doubleB)&#123;</span><br><span class=\"line\">  return (2*doubleA+doubleB)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-Java调用方式一\"><a href=\"#2-Java调用方式一\" class=\"headerlink\" title=\"2) Java调用方式一\"></a>2) Java调用方式一</h3><p>通过装载源码的方式，对于函数比较大，有很多子函数时不太方便<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static void sourceTest2(double a, double b) &#123;</span><br><span class=\"line\">        RConnection c = null;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            //获得 R链接</span><br><span class=\"line\">            c = new RConnection( &quot;127.0.0.1&quot;);</span><br><span class=\"line\">            //加载 源代码</span><br><span class=\"line\">            c.voidEval(&quot;sourceTest &lt;- function(doubleA,doubleB)&#123;return (2*doubleA+doubleB)&#125;&quot;);</span><br><span class=\"line\">            //加载 参数</span><br><span class=\"line\">            c.assign(&quot;para&quot;, new double[]&#123;a, b&#125;);</span><br><span class=\"line\">            //执行函数</span><br><span class=\"line\">            REXP data = c.eval(&quot;sourceTest(para[1],para[2])&quot;);</span><br><span class=\"line\">            //打印结果</span><br><span class=\"line\">            System.out.println( data.asDouble());</span><br><span class=\"line\">        &#125; catch (REXPMismatchException | REngineException ignored) &#123;</span><br><span class=\"line\">            // 做处理...</span><br><span class=\"line\">        &#125; finally &#123;</span><br><span class=\"line\">            if (c != null) &#123;</span><br><span class=\"line\">                c.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p>有子函数时,就应该先加载子函数再加载主函数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//加载子函数 A</span><br><span class=\"line\">c.voidEval(&quot;sourceTestA &lt;- function(doubleA,doubleB)&#123;return (doubleA+doubleB)&#125;&quot;);</span><br><span class=\"line\">//加载子函数 B</span><br><span class=\"line\">c.voidEval(&quot;sourceTestB &lt;- function(doubleA,doubleB)&#123;return (doubleA*doubleB)&#125;&quot;);</span><br><span class=\"line\">//加载主函数，因为主函数中会用到子函数A和B</span><br><span class=\"line\">c.voidEval(&quot;sourceTest &lt;- function(doubleA,doubleB)&#123;return (sourceTestA(doubleA,doubleB)+sourceTestB(doubleA,doubleB)&#125;&quot;);</span><br></pre></td></tr></table></figure></p>\n<p>这种方式对子函数比较多，就很麻烦</p>\n<h3 id=\"3-Java调用方式二\"><a href=\"#3-Java调用方式二\" class=\"headerlink\" title=\"3) Java调用方式二\"></a>3) Java调用方式二</h3><p>通过<code>source</code>的方式，对于子函数很多也很方便<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static void sourceTest3(double a, double b) &#123;</span><br><span class=\"line\">        RConnection c = null;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            c = new RConnection( &quot;127.0.0.1&quot;);</span><br><span class=\"line\">            c.assign(&quot;para&quot;, new double[]&#123;a, b&#125;);</span><br><span class=\"line\">            c.eval(&quot;source(\\&quot;E:/Data/bigdata-r/out/sourceTest.R\\&quot;)&quot;);</span><br><span class=\"line\">            REXP data = c.eval(&quot;sourceTest(para[1],para[2])&quot;);</span><br><span class=\"line\">            System.out.println( data.asDouble());</span><br><span class=\"line\">        &#125; catch (REXPMismatchException | REngineException ignored) &#123;</span><br><span class=\"line\">            // 做处理...</span><br><span class=\"line\">        &#125; finally &#123;</span><br><span class=\"line\">            if (c != null) &#123;</span><br><span class=\"line\">                c.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-简单测试\"><a href=\"#4-简单测试\" class=\"headerlink\" title=\"4) 简单测试\"></a>4) 简单测试</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static void main(String[] args) &#123;</span><br><span class=\"line\">    sourceTest2(2, 3);</span><br><span class=\"line\">    sourceTest3(2, 3);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">E:\\Soft\\Java\\jdk1.8.0_101\\bin\\java....</span><br><span class=\"line\">7.0</span><br><span class=\"line\">7.0</span><br><span class=\"line\">Process finished with exit code 0</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"3-优化\"><a href=\"#3-优化\" class=\"headerlink\" title=\"3.优化\"></a>3.优化</h2><p>上面已经步骤完成了对<code>Java</code>对<code>R</code>的调用，但有时我们并不满足与此</p>\n<p>捕获异常<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">REXP data = c.parseAndEval(&quot;data&lt;-try( sourceTest(a[1],a[2]))&quot;);</span><br><span class=\"line\">if (data.inherits(&quot;try-error&quot;)) &#123;</span><br><span class=\"line\"> System.out.println(&quot;Error: &quot; + data.asString());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>通过<code>parseAndEval</code>和<code>try()</code>定义：程序可能会有异常产生；将通过<code>data.inherits(&quot;try-error&quot;)</code>这种方式捕获异常，当然这种方式肯定对性能有所影响</p>\n<h2 id=\"4-注意\"><a href=\"#4-注意\" class=\"headerlink\" title=\"4.注意\"></a>4.注意</h2><h3 id=\"1-加载boolean型参数\"><a href=\"#1-加载boolean型参数\" class=\"headerlink\" title=\"1) 加载boolean型参数\"></a>1) 加载boolean型参数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if( config.isUseNA())&#123;</span><br><span class=\"line\">  c.voidEval(&quot;useNA &lt;- T&quot;);</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">  c.voidEval(&quot;useNA &lt;- F&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>只能以这种方式加载，其中<code>useNA</code>为参数名，<code>T</code>和<code>F</code>分别表示<code>true</code>、<code>false</code></p>\n<h3 id=\"2-获取返回的数据\"><a href=\"#2-获取返回的数据\" class=\"headerlink\" title=\"2) 获取返回的数据\"></a>2) 获取返回的数据</h3><p>需要与编写R的同事沟通好返回什么类型，一般来说，有如下获取格式(可以相互独立)，<code>REXP data = c.parseAndEval(&quot;....&quot;);</code>：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data.asList();</span><br><span class=\"line\">RList result = ((REXP) data).asList();</span><br><span class=\"line\">((REXP) result.get(&quot;AAA&quot;)).asIntegers();</span><br><span class=\"line\">((REXP) result.get(&quot;BBB&quot;)).asDoubles();</span><br><span class=\"line\">((REXP) result.get(&quot;CCC&quot;)).asStrings()));</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>谢谢</p>\n</blockquote>\n"},{"title":"Java调用R（二） 环境搭建","date":"2017-06-17T08:22:45.000Z","updated":"2019-04-24T10:46:56.000Z","comments":1,"abbrlink":38870,"_content":"\n> 摘要：描述分别在Ubuntu、Linux、Windows上搭建R的环境，以及一些配置项。\n\n## 1.R环境搭建\n> [R 官网（镜像等地址）](https://www.r-project.org/)\n\n1) Windows：\n[下载](https://mirrors.tuna.tsinghua.edu.cn/CRAN/),安装运行即可\n\n2) Linux：\n运行指令即可安装 `$ yum install R`\n启动`$ R`即可\n\n3) Ubuntu：\n修改`sources.list`源文件\n用文本编辑软件如 `vim` 或 `gedit` 或 `kate` 打开`/etc/apt/sources.list`文件，在文本末尾新增一行：\n\n1. 如果是ubuntu是16.04 LTS（如图所示），新增\n```\ndeb https://cloud.r-project.org//bin/linux/ubuntu xenial/\n```\n2. 如果是ubuntu是15.10，新增\n\n```\ndeb https://cloud.r-project.org//bin/linux/ubuntu wily/\n```\n3. 如果ubuntu是14.04 LTS，新增\n```\ndeb https://cloud.r-project.org//bin/linux/ubuntu trusty/\n```\n4. 如果ubuntu是12.04 LTS，新增\n\n```\ndeb https://cloud.r-project.org//bin/linux/ubuntu precise/\n```\n接着运行指令:\n\n```\n$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\n$ sudo apt-get update\n```\n安装基本版，运行\n\n```\n$ sudo apt-get install r-base\n```\n也可以安装开发版（可以编译R包），运行\n\n```\n$ sudo apt-get install r-base-dev\n```\n可能需要XML依赖包：\n```\n$ sudo apt-get install libxml2-dev\n```\n启动`$ R`即可\n\n## 2.包的导入\n- 首先启动R（`$ R`）\n- 安装R相关的包(注意引号)`install.packages(\"Rserve\")`\n- 导入包:`library(Rserve)`\n- 查看包存储的目录`.libPaths()`\n- 添加存储目录`.libPaths(\"/path/to/directory/with/libraries\")`\n\n## 3.其他配置\n1）查看配置\n```\n$ R CMD Rserve --RS-settings\n```\n或者\n```\n$ vim /etc/Rserv.conf\n```\n详解：\n```\nconfig file: 如果无此文件/etc/Rserv.conf, 系统会默认跳过这项\nworking root: R运行时工作目录 /tmp/Rserv\nport: 通信端口默认6311\nlocal socket: TCP/IP协议\nauthorization: 认证是否开启\nplain text password: 是否允许明文密码\npasswords file: 密码文件\nallow I/O: 是否允许IO操作\nallow remote access: 远程访问是否开启\ncontrol commands: 命令控制是否开启\ninteractive: 是否允许通信\nmax.input buffer size: 文件上传限制\n```\n创建配置文件\n\n```\n$ touch /etc/Rserv.conf\n$ vim /etc/Rserv.conf\n```\n```\nworkdir /tmp/Rserv\nremote enable\nfileio enable\nauth required\nplaintext enable\nfileio enable\ninteractive yes\nport 6311\nmaxinbuf 262144\nencoding utf8\ncontrol enable\n```\n2）后台启动Rserve\n\n```\n$ R CMD Rserve\n```\n3）后台启动Rserve（可远程连接）\n\n```\n$ R CMD Rserve --RS-enable-remote\n```\n4）查看R进程\n\n```\n$ ps -aux|grep Rserve\n```\n## 4.Rserve远程连接\n> 参考 [issues](https://github.com/virtualstaticvoid/heroku-buildpack-r/issues/28)\n\n1）创建密码文件\n创建`rserve.pwd`，完整路径为`/etc/rserve.pwd`\n\n```\n$ vim /etc/rserve.pwd\n```\nadd\n\n```\ntest test\ntest1 test2\n```\n2）添加进配置文件\n```\n$ vim /etc/Rserv.conf\n```\nadd\n```\npwdfile /etc/rserve.pwd\nremote enable\nauth required\nplaintext disable\nencoding utf8\n```\n3）登录Rserve\n```\nRConnection c = new RConnection(\"xxx.xxx.xxx.xxx\");\nif( c.needLogin()) {\n\tc.login(\"test\", \"test\");\n}\n...\n```\n\n> 成功，谢谢！\n","source":"_posts/Java调用R（二）_环境搭建.md","raw":"---\ntitle: Java调用R（二） 环境搭建\ndate: '2017/6/17 16:22:45'\nupdated: '2019/4/24 18:46:56'\ncomments: true\ntags:\n  - Java调用R\ncategories:\n  - R\nabbrlink: 38870\n---\n\n> 摘要：描述分别在Ubuntu、Linux、Windows上搭建R的环境，以及一些配置项。\n\n## 1.R环境搭建\n> [R 官网（镜像等地址）](https://www.r-project.org/)\n\n1) Windows：\n[下载](https://mirrors.tuna.tsinghua.edu.cn/CRAN/),安装运行即可\n\n2) Linux：\n运行指令即可安装 `$ yum install R`\n启动`$ R`即可\n\n3) Ubuntu：\n修改`sources.list`源文件\n用文本编辑软件如 `vim` 或 `gedit` 或 `kate` 打开`/etc/apt/sources.list`文件，在文本末尾新增一行：\n\n1. 如果是ubuntu是16.04 LTS（如图所示），新增\n```\ndeb https://cloud.r-project.org//bin/linux/ubuntu xenial/\n```\n2. 如果是ubuntu是15.10，新增\n\n```\ndeb https://cloud.r-project.org//bin/linux/ubuntu wily/\n```\n3. 如果ubuntu是14.04 LTS，新增\n```\ndeb https://cloud.r-project.org//bin/linux/ubuntu trusty/\n```\n4. 如果ubuntu是12.04 LTS，新增\n\n```\ndeb https://cloud.r-project.org//bin/linux/ubuntu precise/\n```\n接着运行指令:\n\n```\n$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\n$ sudo apt-get update\n```\n安装基本版，运行\n\n```\n$ sudo apt-get install r-base\n```\n也可以安装开发版（可以编译R包），运行\n\n```\n$ sudo apt-get install r-base-dev\n```\n可能需要XML依赖包：\n```\n$ sudo apt-get install libxml2-dev\n```\n启动`$ R`即可\n\n## 2.包的导入\n- 首先启动R（`$ R`）\n- 安装R相关的包(注意引号)`install.packages(\"Rserve\")`\n- 导入包:`library(Rserve)`\n- 查看包存储的目录`.libPaths()`\n- 添加存储目录`.libPaths(\"/path/to/directory/with/libraries\")`\n\n## 3.其他配置\n1）查看配置\n```\n$ R CMD Rserve --RS-settings\n```\n或者\n```\n$ vim /etc/Rserv.conf\n```\n详解：\n```\nconfig file: 如果无此文件/etc/Rserv.conf, 系统会默认跳过这项\nworking root: R运行时工作目录 /tmp/Rserv\nport: 通信端口默认6311\nlocal socket: TCP/IP协议\nauthorization: 认证是否开启\nplain text password: 是否允许明文密码\npasswords file: 密码文件\nallow I/O: 是否允许IO操作\nallow remote access: 远程访问是否开启\ncontrol commands: 命令控制是否开启\ninteractive: 是否允许通信\nmax.input buffer size: 文件上传限制\n```\n创建配置文件\n\n```\n$ touch /etc/Rserv.conf\n$ vim /etc/Rserv.conf\n```\n```\nworkdir /tmp/Rserv\nremote enable\nfileio enable\nauth required\nplaintext enable\nfileio enable\ninteractive yes\nport 6311\nmaxinbuf 262144\nencoding utf8\ncontrol enable\n```\n2）后台启动Rserve\n\n```\n$ R CMD Rserve\n```\n3）后台启动Rserve（可远程连接）\n\n```\n$ R CMD Rserve --RS-enable-remote\n```\n4）查看R进程\n\n```\n$ ps -aux|grep Rserve\n```\n## 4.Rserve远程连接\n> 参考 [issues](https://github.com/virtualstaticvoid/heroku-buildpack-r/issues/28)\n\n1）创建密码文件\n创建`rserve.pwd`，完整路径为`/etc/rserve.pwd`\n\n```\n$ vim /etc/rserve.pwd\n```\nadd\n\n```\ntest test\ntest1 test2\n```\n2）添加进配置文件\n```\n$ vim /etc/Rserv.conf\n```\nadd\n```\npwdfile /etc/rserve.pwd\nremote enable\nauth required\nplaintext disable\nencoding utf8\n```\n3）登录Rserve\n```\nRConnection c = new RConnection(\"xxx.xxx.xxx.xxx\");\nif( c.needLogin()) {\n\tc.login(\"test\", \"test\");\n}\n...\n```\n\n> 成功，谢谢！\n","slug":"Java调用R（二）_环境搭建","published":1,"layout":"post","photos":[],"link":"","_id":"cjuw7v4ym0002ynjax13rk9vw","content":"<blockquote>\n<p>摘要：描述分别在Ubuntu、Linux、Windows上搭建R的环境，以及一些配置项。</p>\n</blockquote>\n<h2 id=\"1-R环境搭建\"><a href=\"#1-R环境搭建\" class=\"headerlink\" title=\"1.R环境搭建\"></a>1.R环境搭建</h2><blockquote>\n<p><a href=\"https://www.r-project.org/\" target=\"_blank\" rel=\"noopener\">R 官网（镜像等地址）</a></p>\n</blockquote>\n<p>1) Windows：<br><a href=\"https://mirrors.tuna.tsinghua.edu.cn/CRAN/\" target=\"_blank\" rel=\"noopener\">下载</a>,安装运行即可</p>\n<p>2) Linux：<br>运行指令即可安装 <code>$ yum install R</code><br>启动<code>$ R</code>即可</p>\n<p>3) Ubuntu：<br>修改<code>sources.list</code>源文件<br>用文本编辑软件如 <code>vim</code> 或 <code>gedit</code> 或 <code>kate</code> 打开<code>/etc/apt/sources.list</code>文件，在文本末尾新增一行：</p>\n<ol>\n<li><p>如果是ubuntu是16.04 LTS（如图所示），新增</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb https://cloud.r-project.org//bin/linux/ubuntu xenial/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果是ubuntu是15.10，新增</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb https://cloud.r-project.org//bin/linux/ubuntu wily/</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><p>如果ubuntu是14.04 LTS，新增</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb https://cloud.r-project.org//bin/linux/ubuntu trusty/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果ubuntu是12.04 LTS，新增</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb https://cloud.r-project.org//bin/linux/ubuntu precise/</span><br></pre></td></tr></table></figure>\n<p>接着运行指令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9</span><br><span class=\"line\">$ sudo apt-get update</span><br></pre></td></tr></table></figure>\n<p>安装基本版，运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install r-base</span><br></pre></td></tr></table></figure>\n<p>也可以安装开发版（可以编译R包），运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install r-base-dev</span><br></pre></td></tr></table></figure>\n<p>可能需要XML依赖包：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install libxml2-dev</span><br></pre></td></tr></table></figure></p>\n<p>启动<code>$ R</code>即可</p>\n<h2 id=\"2-包的导入\"><a href=\"#2-包的导入\" class=\"headerlink\" title=\"2.包的导入\"></a>2.包的导入</h2><ul>\n<li>首先启动R（<code>$ R</code>）</li>\n<li>安装R相关的包(注意引号)<code>install.packages(&quot;Rserve&quot;)</code></li>\n<li>导入包:<code>library(Rserve)</code></li>\n<li>查看包存储的目录<code>.libPaths()</code></li>\n<li>添加存储目录<code>.libPaths(&quot;/path/to/directory/with/libraries&quot;)</code></li>\n</ul>\n<h2 id=\"3-其他配置\"><a href=\"#3-其他配置\" class=\"headerlink\" title=\"3.其他配置\"></a>3.其他配置</h2><p>1）查看配置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ R CMD Rserve --RS-settings</span><br></pre></td></tr></table></figure></p>\n<p>或者<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /etc/Rserv.conf</span><br></pre></td></tr></table></figure></p>\n<p>详解：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config file: 如果无此文件/etc/Rserv.conf, 系统会默认跳过这项</span><br><span class=\"line\">working root: R运行时工作目录 /tmp/Rserv</span><br><span class=\"line\">port: 通信端口默认6311</span><br><span class=\"line\">local socket: TCP/IP协议</span><br><span class=\"line\">authorization: 认证是否开启</span><br><span class=\"line\">plain text password: 是否允许明文密码</span><br><span class=\"line\">passwords file: 密码文件</span><br><span class=\"line\">allow I/O: 是否允许IO操作</span><br><span class=\"line\">allow remote access: 远程访问是否开启</span><br><span class=\"line\">control commands: 命令控制是否开启</span><br><span class=\"line\">interactive: 是否允许通信</span><br><span class=\"line\">max.input buffer size: 文件上传限制</span><br></pre></td></tr></table></figure></p>\n<p>创建配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ touch /etc/Rserv.conf</span><br><span class=\"line\">$ vim /etc/Rserv.conf</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">workdir /tmp/Rserv</span><br><span class=\"line\">remote enable</span><br><span class=\"line\">fileio enable</span><br><span class=\"line\">auth required</span><br><span class=\"line\">plaintext enable</span><br><span class=\"line\">fileio enable</span><br><span class=\"line\">interactive yes</span><br><span class=\"line\">port 6311</span><br><span class=\"line\">maxinbuf 262144</span><br><span class=\"line\">encoding utf8</span><br><span class=\"line\">control enable</span><br></pre></td></tr></table></figure>\n<p>2）后台启动Rserve</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ R CMD Rserve</span><br></pre></td></tr></table></figure>\n<p>3）后台启动Rserve（可远程连接）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ R CMD Rserve --RS-enable-remote</span><br></pre></td></tr></table></figure>\n<p>4）查看R进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ps -aux|grep Rserve</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-Rserve远程连接\"><a href=\"#4-Rserve远程连接\" class=\"headerlink\" title=\"4.Rserve远程连接\"></a>4.Rserve远程连接</h2><blockquote>\n<p>参考 <a href=\"https://github.com/virtualstaticvoid/heroku-buildpack-r/issues/28\" target=\"_blank\" rel=\"noopener\">issues</a></p>\n</blockquote>\n<p>1）创建密码文件<br>创建<code>rserve.pwd</code>，完整路径为<code>/etc/rserve.pwd</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /etc/rserve.pwd</span><br></pre></td></tr></table></figure>\n<p>add</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test test</span><br><span class=\"line\">test1 test2</span><br></pre></td></tr></table></figure>\n<p>2）添加进配置文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /etc/Rserv.conf</span><br></pre></td></tr></table></figure></p>\n<p>add<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pwdfile /etc/rserve.pwd</span><br><span class=\"line\">remote enable</span><br><span class=\"line\">auth required</span><br><span class=\"line\">plaintext disable</span><br><span class=\"line\">encoding utf8</span><br></pre></td></tr></table></figure></p>\n<p>3）登录Rserve<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RConnection c = new RConnection(&quot;xxx.xxx.xxx.xxx&quot;);</span><br><span class=\"line\">if( c.needLogin()) &#123;</span><br><span class=\"line\">\tc.login(&quot;test&quot;, &quot;test&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>成功，谢谢！</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>摘要：描述分别在Ubuntu、Linux、Windows上搭建R的环境，以及一些配置项。</p>\n</blockquote>\n<h2 id=\"1-R环境搭建\"><a href=\"#1-R环境搭建\" class=\"headerlink\" title=\"1.R环境搭建\"></a>1.R环境搭建</h2><blockquote>\n<p><a href=\"https://www.r-project.org/\" target=\"_blank\" rel=\"noopener\">R 官网（镜像等地址）</a></p>\n</blockquote>\n<p>1) Windows：<br><a href=\"https://mirrors.tuna.tsinghua.edu.cn/CRAN/\" target=\"_blank\" rel=\"noopener\">下载</a>,安装运行即可</p>\n<p>2) Linux：<br>运行指令即可安装 <code>$ yum install R</code><br>启动<code>$ R</code>即可</p>\n<p>3) Ubuntu：<br>修改<code>sources.list</code>源文件<br>用文本编辑软件如 <code>vim</code> 或 <code>gedit</code> 或 <code>kate</code> 打开<code>/etc/apt/sources.list</code>文件，在文本末尾新增一行：</p>\n<ol>\n<li><p>如果是ubuntu是16.04 LTS（如图所示），新增</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb https://cloud.r-project.org//bin/linux/ubuntu xenial/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果是ubuntu是15.10，新增</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb https://cloud.r-project.org//bin/linux/ubuntu wily/</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><p>如果ubuntu是14.04 LTS，新增</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb https://cloud.r-project.org//bin/linux/ubuntu trusty/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果ubuntu是12.04 LTS，新增</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb https://cloud.r-project.org//bin/linux/ubuntu precise/</span><br></pre></td></tr></table></figure>\n<p>接着运行指令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9</span><br><span class=\"line\">$ sudo apt-get update</span><br></pre></td></tr></table></figure>\n<p>安装基本版，运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install r-base</span><br></pre></td></tr></table></figure>\n<p>也可以安装开发版（可以编译R包），运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install r-base-dev</span><br></pre></td></tr></table></figure>\n<p>可能需要XML依赖包：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install libxml2-dev</span><br></pre></td></tr></table></figure></p>\n<p>启动<code>$ R</code>即可</p>\n<h2 id=\"2-包的导入\"><a href=\"#2-包的导入\" class=\"headerlink\" title=\"2.包的导入\"></a>2.包的导入</h2><ul>\n<li>首先启动R（<code>$ R</code>）</li>\n<li>安装R相关的包(注意引号)<code>install.packages(&quot;Rserve&quot;)</code></li>\n<li>导入包:<code>library(Rserve)</code></li>\n<li>查看包存储的目录<code>.libPaths()</code></li>\n<li>添加存储目录<code>.libPaths(&quot;/path/to/directory/with/libraries&quot;)</code></li>\n</ul>\n<h2 id=\"3-其他配置\"><a href=\"#3-其他配置\" class=\"headerlink\" title=\"3.其他配置\"></a>3.其他配置</h2><p>1）查看配置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ R CMD Rserve --RS-settings</span><br></pre></td></tr></table></figure></p>\n<p>或者<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /etc/Rserv.conf</span><br></pre></td></tr></table></figure></p>\n<p>详解：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config file: 如果无此文件/etc/Rserv.conf, 系统会默认跳过这项</span><br><span class=\"line\">working root: R运行时工作目录 /tmp/Rserv</span><br><span class=\"line\">port: 通信端口默认6311</span><br><span class=\"line\">local socket: TCP/IP协议</span><br><span class=\"line\">authorization: 认证是否开启</span><br><span class=\"line\">plain text password: 是否允许明文密码</span><br><span class=\"line\">passwords file: 密码文件</span><br><span class=\"line\">allow I/O: 是否允许IO操作</span><br><span class=\"line\">allow remote access: 远程访问是否开启</span><br><span class=\"line\">control commands: 命令控制是否开启</span><br><span class=\"line\">interactive: 是否允许通信</span><br><span class=\"line\">max.input buffer size: 文件上传限制</span><br></pre></td></tr></table></figure></p>\n<p>创建配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ touch /etc/Rserv.conf</span><br><span class=\"line\">$ vim /etc/Rserv.conf</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">workdir /tmp/Rserv</span><br><span class=\"line\">remote enable</span><br><span class=\"line\">fileio enable</span><br><span class=\"line\">auth required</span><br><span class=\"line\">plaintext enable</span><br><span class=\"line\">fileio enable</span><br><span class=\"line\">interactive yes</span><br><span class=\"line\">port 6311</span><br><span class=\"line\">maxinbuf 262144</span><br><span class=\"line\">encoding utf8</span><br><span class=\"line\">control enable</span><br></pre></td></tr></table></figure>\n<p>2）后台启动Rserve</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ R CMD Rserve</span><br></pre></td></tr></table></figure>\n<p>3）后台启动Rserve（可远程连接）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ R CMD Rserve --RS-enable-remote</span><br></pre></td></tr></table></figure>\n<p>4）查看R进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ps -aux|grep Rserve</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-Rserve远程连接\"><a href=\"#4-Rserve远程连接\" class=\"headerlink\" title=\"4.Rserve远程连接\"></a>4.Rserve远程连接</h2><blockquote>\n<p>参考 <a href=\"https://github.com/virtualstaticvoid/heroku-buildpack-r/issues/28\" target=\"_blank\" rel=\"noopener\">issues</a></p>\n</blockquote>\n<p>1）创建密码文件<br>创建<code>rserve.pwd</code>，完整路径为<code>/etc/rserve.pwd</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /etc/rserve.pwd</span><br></pre></td></tr></table></figure>\n<p>add</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test test</span><br><span class=\"line\">test1 test2</span><br></pre></td></tr></table></figure>\n<p>2）添加进配置文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /etc/Rserv.conf</span><br></pre></td></tr></table></figure></p>\n<p>add<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pwdfile /etc/rserve.pwd</span><br><span class=\"line\">remote enable</span><br><span class=\"line\">auth required</span><br><span class=\"line\">plaintext disable</span><br><span class=\"line\">encoding utf8</span><br></pre></td></tr></table></figure></p>\n<p>3）登录Rserve<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RConnection c = new RConnection(&quot;xxx.xxx.xxx.xxx&quot;);</span><br><span class=\"line\">if( c.needLogin()) &#123;</span><br><span class=\"line\">\tc.login(&quot;test&quot;, &quot;test&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>成功，谢谢！</p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjuw7v4yh0001ynjay3bt26zp","category_id":"cjuw7v4yo0003ynja9zqdwoxv","_id":"cjuw7v4yu0008ynjaaj09nook"},{"post_id":"cjuw7v4ym0002ynjax13rk9vw","category_id":"cjuw7v4yo0003ynja9zqdwoxv","_id":"cjuw7v4yv000aynjatbzmsrhr"}],"PostTag":[{"post_id":"cjuw7v4yh0001ynjay3bt26zp","tag_id":"cjuw7v4yq0004ynjaeg8tg423","_id":"cjuw7v4yt0007ynjalieu6dkd"},{"post_id":"cjuw7v4ym0002ynjax13rk9vw","tag_id":"cjuw7v4yq0004ynjaeg8tg423","_id":"cjuw7v4yv0009ynjahl7xl9gf"}],"Tag":[{"name":"Java调用R","_id":"cjuw7v4yq0004ynjaeg8tg423"}]}}